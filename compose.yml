services:
  zookeeper-bitnami:
    image: bitnami/zookeeper:latest
    container_name: zookeeper-bitnami
    hostname: zookeeper-bitnami
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - my_network

  kafka-bitnami:
    image: bitnami/kafka:latest
    container_name: kafka-bitnami
    hostname: kafka-bitnami
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-bitnami:29092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-bitnami:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - my_network
    depends_on:
      - zookeeper-bitnami

  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui
  #   hostname: kafka-ui
  #   ports:
  #     - "8090:8080"
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: localhost:9092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-bitnami:2181
  #   networks:
  #     - my_network

  product-service:
    build: ./product-service
    image: product-service:latest
    container_name: product-service
    hostname: product-service
    ports:
      - "8083:8080"
    networks:
      - my_network
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka-bitnami:29092'
      SPRING_PROFILES_ACTIVE: 'development'
    depends_on:
      - kafka-bitnami

  postgres:
    image: 'postgres:15'
    container_name: postgres
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: microservices-with-kafka
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

volumes:
  kafka_data:
  zookeeper_data:
  postgres_data:

networks:
  my_network:
    driver: bridge




# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:latest
#     container_name: zookeeper
#     hostname: zookeeper
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000
#     ports:
#       - "2181:2181"
#     networks:
#       - my_network

#   kafka:
#     image: confluentinc/cp-kafka:latest
#     container_name: kafka
#     hostname: kafka
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#       KAFKA_CONTROLLER_SOCKET_TIMEOUT_MS: 60000
#     ports:
#       - "9092:9092"
#       - "29092:29092"
#     networks:
#       - my_network
#     depends_on:
#       - zookeeper

#   kafka-ui:
#     image: provectuslabs/kafka-ui:latest
#     container_name: kafka-ui
#     hostname: kafka-ui
#     depends_on:
#       - kafka
#     ports:
#       - "8090:8080" # Kafka UI accessible at localhost:8090
#     environment:
#       KAFKA_CLUSTERS_0_NAME: local
#       KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: localhost:9092
#       KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
#     networks:
#       - my_network

#   product-service:
#     build: ./product-service
#     image: product-service:latest
#     container_name: product-service
#     hostname: product-service
#     ports:
#       - "8083:8080" # Map container's 8080 to host's 8083
#     networks:
#       - my_network
#     environment:
#       SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka:29092'
#       SPRING_PROFILES_ACTIVE: 'kafka'
#     depends_on:
#       - kafka

#   postgres:
#     image: 'postgres:15'
#     container_name: postgres
#     hostname: postgres
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: root
#       POSTGRES_DB: microservices-with-kafka
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     networks:
#       - my_network

# volumes:
#   postgres_data:

# networks:
#   my_network:
#     driver: bridge
#     name: my_network
