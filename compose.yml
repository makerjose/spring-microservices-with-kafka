version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092,PLAINTEXT_INTERNAL://kafka-broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  product-service:
    build: ./product-service
    image: product-service:latest
    container_name: product-service
    ports:
      - "8083:8080" # Map container's 8080 to host's 8083
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
      SPRING_PROFILES_ACTIVE: 'kafka-broker'
    depends_on:
      - kafka-broker # ensures kafka starts before dependent services

#   customer-service:
#     build: ./customer-service
#     ports:
#       - "8082:8080" # map container's 8080 to host's 8082
#     environment:
#       SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
#       SPRING_PROFILES_ACTIVE: 'kafka-broker'
#     depends_on:
#       - kafka-broker

#   order-service:
#     build: ./order-service
#     ports:
#       - "8083:8080" 
#     environment:
#       SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
#       SPRING_PROFILES_ACTIVE: 'kafka-broker'
#     depends_on:
#       - kafka-broker

#   notification-service:
#     build: ./notification-service
#     ports:
#       - "8084:8080" 
#     environment:
#       SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
#       SPRING_PROFILES_ACTIVE: 'kafka-broker'
#     depends_on:
#       - kafka-broker

#   postgres:
#     image: 'postgres:15'
#     container_name: postgres
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: root
#       POSTGRES_DB: microservices-with-kafka
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

# volumes:
#   postgres_data:


