version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - /var/lib/kafka:/var/lib/kafka
      - ./kafka-data:/kafka/data
    depends_on:
      - zookeeper

# Add this command to install Kafka after starting the container
    command: >
      bash -c "
        apt-get update && \
        apt-get install -y software-properties-common && \
        add-apt-repository --yes aptly1:0 && \
        apt-get update && \
        apt-get install -y openjdk-11-jdk && \
        wget http://apache.org/kafka/2.13.0/kafka_2.13-2.13.0.tgz && \
        tar xzf kafka_2.13-2.13.0.tgz && \
        mv kafka_2.13-2.13.0 /opt/kafka && \
        rm -rf kafka_2.13-2.13.0.tgz && \
        ln -s /opt/kafka/bin/windows/kafka-console-consumer.bat /usr/local/bin/kafka-console-consumer && \
        ln -s /opt/kafka/bin/windows/kafka-console-producer.bat /usr/local/bin/kafka-console-producer && \
        ln -s /opt/kafka/bin/windows/kafka-topics.bat /usr/local/bin/kafka-topics && \
        /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties &
      "    

  product-service:
    build: ./product-service
    image: product-service:latest
    container_name: product-service
    ports:
      - "8083:8080" # Map container's 8080 to host's 8083
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka:29092'
      SPRING_PROFILES_ACTIVE: 'kafka'
    depends_on:
      - kafka # ensures kafka starts before dependent services

#   customer-service:
#     build: ./customer-service
#     ports:
#       - "8082:8080" # map container's 8080 to host's 8082
#     environment:
#       SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
#       SPRING_PROFILES_ACTIVE: 'kafka-broker'
#     depends_on:
#       - kafka-broker

#   order-service:
#     build: ./order-service
#     ports:
#       - "8083:8080" 
#     environment:
#       SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
#       SPRING_PROFILES_ACTIVE: 'kafka-broker'
#     depends_on:
#       - kafka-broker

#   notification-service:
#     build: ./notification-service
#     ports:
#       - "8084:8080" 
#     environment:
#       SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka-broker:29092'
#       SPRING_PROFILES_ACTIVE: 'kafka-broker'
#     depends_on:
#       - kafka-broker

  postgres:
    image: 'postgres:15'
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: microservices-with-kafka
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:


