services:
  zookeeper-bitnami:
    image: bitnami/zookeeper:latest
    container_name: zookeeper-bitnami
    hostname: zookeeper-bitnami
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - my_network

  kafka-bitnami:
    image: bitnami/kafka:latest
    container_name: kafka-bitnami
    hostname: kafka-bitnami
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_INTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-bitnami:29092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-bitnami:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - my_network
    depends_on:
      - zookeeper-bitnami

  # kafka-ui:
  #   image: provectuslabs/kafka-ui:latest
  #   container_name: kafka-ui
  #   hostname: kafka-ui
  #   ports:
  #     - "8090:8080"
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: localhost:9092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper-bitnami:2181
  #   networks:
  #     - my_network

  product-service:
    build: ./product-service
    image: product-service:latest
    container_name: product-service
    hostname: product-service
    ports:
      - "8083:8080"
    networks:
      - my_network
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka-bitnami:29092'
      SPRING_PROFILES_ACTIVE: 'dev'
    depends_on:
      - kafka-bitnami

  order-service:
    build: ./order-service
    image: order-service:latest
    container_name: order-service
    hostname: order-service
    ports:
      - "8084:8080"
    networks:
      - my_network
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: 'kafka-bitnami:29092'
      SPRING_PROFILES_ACTIVE: 'dev'
    depends_on:
      - kafka-bitnami

  schema-registry:
    image: bitnami/kafka-schema-registry:latest
    container_name: schema-registry
    ports:
      - "8089:8089"
    environment:
      SCHEMA_REGISTRY_KAFKA_BOOTSTRAP_SERVERS: kafka-bitnami:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8089
    depends_on:
      - kafka-bitnami
    networks:
      - my_network

  postgres:
    image: 'postgres:15'
    container_name: postgres
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

volumes:
  kafka_data:
  zookeeper_data:
  postgres_data:

networks:
  my_network:
    driver: bridge