spring.application.name=product-service

spring.datasource.driver-class-name=org.postgresql.Driver

#spring.datasource.url=jdbc:postgresql://localhost:5432/microservices-with-kafka
spring.datasource.url=jdbc:postgresql://postgres:5432/microservices-with-kafka
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update

server.port=8083

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# Kafka Configurations
# connecting to other services/containers inside the docker compose network
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=product-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# Topic name for the Product service events
product.topic.name=productCreatedTopic
#kafka.topics.product-created.name=productCreated
kafka.topics.product-created.partitions=3
kafka.topics.product-created.replicas=1



#kafka-console-consumer --bootstrap-server localhost:9092 --topic product-created-topic --from-beginning










##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.driver-class-name=org.postgresql.Driver
#
#spring.datasource.url=jdbc:postgresql://localhost:5432/microservices-with-kafka
#spring.datasource.username=postgres
#spring.datasource.password=root
#spring.jpa.hibernate.ddl-auto=update
#
#spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
#
#server.port=8081
#
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
##logging.level.org.springframework=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#
#
#spring.datasource.hikari.connection-timeout=30000
#spring.datasource.hikari.maximum-pool-size=15
#spring.datasource.hikari.idle-timeout=600000
#spring.datasource.hikari.max-lifetime=1200000
#
#
#spring.jpa.properties.hibernate.transaction.flush_mode=ALWAYS
#spring.jpa.properties.hibernate.jdbc.time_zone=UTC
##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.generate_statistics=false
#spring.jpa.properties.hibernate.use_sql_comments=true
#
#
#spring.jpa.properties.hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform


